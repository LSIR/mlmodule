# Build stage
FROM nvidia/cuda:11.0-devel-ubuntu20.04 as builder

# Download Miniconda py37 - https://docs.conda.io/en/latest/miniconda.html#linux-installers
RUN apt-get -qq update && apt-get -qq -y install curl bzip2 git \
    && curl -sSL https://repo.anaconda.com/miniconda/Miniconda3-py37_4.10.3-Linux-x86_64.sh -o /tmp/miniconda.sh \
    && bash /tmp/miniconda.sh -bfp /usr/local \
    && rm -rf /tmp/miniconda.sh
ENV PATH /opt/conda/bin:$PATH

# Create a conda environment
ARG PYTHON_VERSION=3.7
RUN conda create -n app python=${PYTHON_VERSION}
SHELL ["conda", "run", "-n", "app", "--no-capture-output", "/bin/bash", "-c"]

# Compiling PyTorch
ARG TORCH_VERSION=1.7.1
WORKDIR /tmp/build/torch
ADD scripts/install-torch-from-sources.sh .
RUN bash install-torch-from-sources.sh ${TORCH_VERSION}

# Installing and compiling TorchVision
ARG TORCHVISION_VERSION=0.8.2
ENV TORCH_CUDA_ARCH_LIST 3.5
ENV FORCE_CUDA 1
WORKDIR /tmp/build/torchvision
ADD scripts/install-torchvision-from-sources.sh .
RUN pip install opencv-python-headless && \
    conda run -n app --no-capture-output bash install-torchvision-from-sources.sh ${TORCHVISION_VERSION}

# Installing MMCV
ARG MMCV_VERSION=1.3.1
WORKDIR /tmp/build/mmcv
ADD scripts/install-mmcv-from-sources.sh .
RUN bash install-mmcv-from-sources.sh ${MMCV_VERSION}
