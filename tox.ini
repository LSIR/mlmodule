[tox]
envlist = {cuda110-,cuda110-ca35-,}py37,docker-{cuda110-,cuda110-ca35-}{cputest-,}py37
requires = tox-conda

[testenv]
description = 
    !cuda110-!ca35: Installs a conda environment with CPU only support
    cuda110-!ca35: Installs a conda environment with CUDA 11.0
    cuda110-ca35: Installs a conda environment with CUDA 11.0 and compiled PyTorch for PC32
deps =
    pytest
    flake8
    ca35: {env:LSIR_PUBLIC_ASSETS_DIR:/mnt/storage01/lsir-public-assets}/wheels/pytorch/torch-1.7.1-cp37-cp37m-linux_x86_64.whl
    ca35: {env:LSIR_PUBLIC_ASSETS_DIR:/mnt/storage01/lsir-public-assets}/wheels/torchvision/torchvision-0.8.2-cp37-cp37m-linux_x86_64.whl
conda_deps =
    !ca35: pytorch==1.7.1
    !ca35: torchvision==0.8.2
    cuda110: cudatoolkit=11.0
conda_channels =
    pytorch
extras =
    full
    test
passenv =
    AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY
    MLMODULE_BUILD_VERSION
commands =
    flake8
    pytest tests []

[testenv:docker-{cuda110-,cuda110-ca35-}{cputest-,}py37]
description = Environment to test MLModule on the lsirepfl/pytorch image
deps =
    build
conda_deps =
conda_channels =
extras =
setenv =
    cuda110-ca35-py37: BASE_IMAGE = lsirepfl/mlmodulekit:1-ca35
    cuda110-!ca35-py37: BASE_IMAGE = lsirepfl/mlmodulekit:1
    MLMODULE_BUILD_VERSION = {env:MLMODULE_BUILD_VERSION:0.0.dev0}
    cputest: CPU_ONLY_TESTS = y
allowlist_externals =
    docker
commands =
    docker build \
		--build-arg MLMODULE_BUILD_VERSION={env:MLMODULE_BUILD_VERSION} \
		--build-arg BASE_IMAGE={env:BASE_IMAGE} \
		--build-arg DISTDIR=.tox/dist \
		-f tests/Dockerfile.test \
		-t test-mlmodule/{env:BASE_IMAGE}-{env:MLMODULE_BUILD_VERSION} .
    docker run --rm \
		-e AWS_ACCESS_KEY_ID={env:AWS_ACCESS_KEY_ID} \
		-e AWS_SECRET_ACCESS_KEY={env:AWS_SECRET_ACCESS_KEY} \
		-e CPU_ONLY_TESTS={env:CPU_ONLY_TESTS:n} \
        -v {toxworkdir}/.pytest:/app/.pytest \
		test-mlmodule/{env:BASE_IMAGE}-{env:MLMODULE_BUILD_VERSION} \
		conda run -n app --no-capture-output pytest /app/tests []
commands_post =
    docker rmi test-mlmodule/{env:BASE_IMAGE}-{env:MLMODULE_BUILD_VERSION}
